{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\Todos.js\",\n    _s = $RefreshSig$();\n\n// import {  useState, useEffect } from 'react'\n// function Todos() {\n//     const [contact, setContact] = useState(null);\n//     const [select, setSelect] = useState('serial');\n//     const [information, setInformation] = useState(null);\n//     const user = JSON.parse(localStorage.getItem('user'));\n//     useEffect(() => {\n//         fetch(`https://jsonplaceholder.typicode.com/todos/?userId=${user.id}`)\n//             .then(response => response.json()\n//                 .then((data) => {\n//                     mapy(data);\n//                     setInformation(data)\n//                 }))\n//                 .catch(() =>{})\n//     }, [user.id])\n//     const serial = () => {\n//         let data = information;\n//         data.sort((a, b) => {\n//             if (a.id < b.id)\n//                 return -1\n//             else\n//                 return 1;\n//         }\n//         )\n//         setInformation(data);\n//         mapy(information)\n//     }\n//     const alphaBeit = () => {\n//         let data = information;\n//         data.sort((a, b) => {\n//             if (a.title < b.title)\n//                 return -1\n//             else\n//                 return 1;\n//         }\n//         );\n//         setInformation(data);\n//         mapy(information)\n//     }\n//     const complete = () => {\n//         let notChecked = []\n//         let checked = [];\n//         for (let i = 0; i < information.length; ++i) {\n//             if (information[i].completed) {\n//                 checked.push(information[i]);\n//             } else {\n//                 notChecked.push(information[i])\n//             }\n//         }\n//         let data = [...checked, ...notChecked];\n//         setInformation(data)\n//         mapy(data);\n//     }\n//     const random = () => {\n//         let data = information;\n//         for (let i = 0; i < data.length; ++i) {\n//             let randomNum = Math.floor(Math.random() * data.length);\n//             let num = data[i];\n//             data[i] = data[randomNum];\n//             data[randomNum] = num;\n//         }\n//         setInformation(data)\n//         mapy(data);\n//     }\n//     const mapy = (data) => {\n//         let ul = data.map(todo => {\n//             return (<p key={todo.id}>\n//                 <input type='checkbox' checked={todo.completed} />\n//                 <span>{todo.title}</span>\n//             </p>)\n//         })\n//         setContact(ul)\n//     }\n//     const handleOnChange = (e) => {\n//         let value = e.target.value;\n//         setSelect(value);\n//         switch (value) {\n//             case \"alphaBeit\":\n//                 alphaBeit();\n//                 break;\n//             case \"complete\":\n//                 complete();\n//                 break;\n//             case \"random\":\n//                 random();\n//                 break;\n//             default:\n//                 serial();\n//                 break;\n//         }\n//     }\n//     return (\n//         <div>\n//             <select value={select} onChange={(e) => handleOnChange(e)} >\n//                 <option value=\"serial\">serial</option>\n//                 <option value=\"alphaBeit\">alphaBeit</option>\n//                 <option value=\"complete\">complete</option>\n//                 <option value=\"random\">random</option>\n//             </select>\n//             <div>{contact}</div>\n//         </div>\n//     )\n// }\n// export default Todos;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function Todos() {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: [0, 1, 2, 3].map(value => {\n      const labelId = `checkbox-list-secondary-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: `Avatar n°${value + 1}`,\n            src: `/static/images/avatar/${value + 1}.jpg`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: labelId,\n          primary: `Line item ${value + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"end\",\n            onChange: handleToggle(value),\n            checked: checked.indexOf(value) !== -1,\n            inputProps: {\n              'aria-labelledby': labelId\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todos, \"XbC/dOvaPtgvS6rn7QFVAzPBVvA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/Todos.js"],"names":["React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Todos","classes","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId"],"mappings":";;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADiC,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBrB,KAAK,CAACsB,QAAN,CAAe,CAAC,CAAD,CAAf,CAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpC,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGP,OAAJ,CAAnB;;AAEA,QAAIK,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDJ,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD,GAXD;;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAER,OAAO,CAACR,IAA/B;AAAA,cACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAamB,GAAb,CAAkBN,KAAD,IAAW;AAC3B,YAAMO,OAAO,GAAI,iCAAgCP,KAAM,EAAvD;AACA,0BACE,QAAC,QAAD;AAAsB,QAAA,MAAM,MAA5B;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,GAAG,EAAG,YAAWA,KAAK,GAAG,CAAE,EAD7B;AAEE,YAAA,GAAG,EAAG,yBAAwBA,KAAK,GAAG,CAAE;AAF1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEO,OAAlB;AAA2B,UAAA,OAAO,EAAG,aAAYP,KAAK,GAAG,CAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,uBAAD;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,IAAI,EAAC,KADP;AAEE,YAAA,QAAQ,EAAED,YAAY,CAACC,KAAD,CAFxB;AAGE,YAAA,OAAO,EAAEJ,OAAO,CAACM,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAHvC;AAIE,YAAA,UAAU,EAAE;AAAE,iCAAmBO;AAArB;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAeP,KAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD,KArBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA3CuBN,K;UACNT,S;;;KADMS,K","sourcesContent":["// import {  useState, useEffect } from 'react'\r\n\r\n\r\n// function Todos() {\r\n//     const [contact, setContact] = useState(null);\r\n//     const [select, setSelect] = useState('serial');\r\n//     const [information, setInformation] = useState(null);\r\n//     const user = JSON.parse(localStorage.getItem('user'));\r\n//     useEffect(() => {\r\n//         fetch(`https://jsonplaceholder.typicode.com/todos/?userId=${user.id}`)\r\n//             .then(response => response.json()\r\n//                 .then((data) => {\r\n//                     mapy(data);\r\n//                     setInformation(data)\r\n//                 }))\r\n//                 .catch(() =>{})\r\n\r\n//     }, [user.id])\r\n\r\n\r\n//     const serial = () => {\r\n\r\n//         let data = information;\r\n//         data.sort((a, b) => {\r\n//             if (a.id < b.id)\r\n//                 return -1\r\n//             else\r\n//                 return 1;\r\n//         }\r\n//         )\r\n//         setInformation(data);\r\n//         mapy(information)\r\n\r\n//     }\r\n//     const alphaBeit = () => {\r\n//         let data = information;\r\n//         data.sort((a, b) => {\r\n//             if (a.title < b.title)\r\n//                 return -1\r\n//             else\r\n//                 return 1;\r\n//         }\r\n//         );\r\n//         setInformation(data);\r\n//         mapy(information)\r\n//     }\r\n\r\n//     const complete = () => {\r\n//         let notChecked = []\r\n//         let checked = [];\r\n//         for (let i = 0; i < information.length; ++i) {\r\n//             if (information[i].completed) {\r\n//                 checked.push(information[i]);\r\n//             } else {\r\n//                 notChecked.push(information[i])\r\n//             }\r\n\r\n//         }\r\n//         let data = [...checked, ...notChecked];\r\n//         setInformation(data)\r\n//         mapy(data);\r\n//     }\r\n\r\n//     const random = () => {\r\n//         let data = information;\r\n//         for (let i = 0; i < data.length; ++i) {\r\n//             let randomNum = Math.floor(Math.random() * data.length);\r\n//             let num = data[i];\r\n//             data[i] = data[randomNum];\r\n//             data[randomNum] = num;\r\n//         }\r\n//         setInformation(data)\r\n//         mapy(data);\r\n//     }\r\n\r\n//     const mapy = (data) => {\r\n//         let ul = data.map(todo => {\r\n//             return (<p key={todo.id}>\r\n//                 <input type='checkbox' checked={todo.completed} />\r\n//                 <span>{todo.title}</span>\r\n//             </p>)\r\n//         })\r\n//         setContact(ul)\r\n//     }\r\n\r\n\r\n//     const handleOnChange = (e) => {\r\n//         let value = e.target.value;\r\n//         setSelect(value);\r\n//         switch (value) {\r\n//             case \"alphaBeit\":\r\n//                 alphaBeit();\r\n//                 break;\r\n//             case \"complete\":\r\n//                 complete();\r\n//                 break;\r\n//             case \"random\":\r\n//                 random();\r\n//                 break;\r\n//             default:\r\n//                 serial();\r\n//                 break;\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n\r\n//             <select value={select} onChange={(e) => handleOnChange(e)} >\r\n//                 <option value=\"serial\">serial</option>\r\n//                 <option value=\"alphaBeit\">alphaBeit</option>\r\n//                 <option value=\"complete\">complete</option>\r\n//                 <option value=\"random\">random</option>\r\n//             </select>\r\n//             <div>{contact}</div>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n// export default Todos;\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Todos() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([1]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <List dense className={classes.root}>\r\n      {[0, 1, 2, 3].map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem key={value} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar n°${value + 1}`}\r\n                src={`/static/images/avatar/${value + 1}.jpg`}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}