{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\Toodos.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Toodos() {\n  _s();\n\n  const [contact, setContact] = useState(null);\n  const [select, setSelect] = useState('serial');\n  const [information, setInformation] = useState(null);\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/?usrId=${user.id}`).then(response => response.json().then(data => {\n      mapy(data);\n      setInformation(data);\n    })).catch(() => {});\n  }, [user.id]);\n\n  const serial = () => {\n    let data = information;\n    data.sort((a, b) => {\n      if (a.id < b.id) return -1;else return 1;\n    });\n    setInformation(data);\n    mapy(information);\n  };\n\n  const alphaBeit = () => {\n    let data = information;\n    data.sort((a, b) => {\n      if (a.title < b.title) return -1;else return 1;\n    });\n    setInformation(data);\n    mapy(information);\n  };\n\n  const complete = () => {\n    let notChecked = [];\n    let checked = [];\n\n    for (let i = 0; i < information.length; ++i) {\n      if (information[i].completed) {\n        checked.push(information[i]);\n      } else {\n        notChecked.push(information[i]);\n      }\n    }\n\n    let data = [...checked, ...notChecked];\n    setInformation(data);\n    mapy(data);\n  };\n\n  const random = () => {\n    let data = information;\n\n    for (let i = 0; i < data.length; ++i) {\n      let randomNum = Math.floor(Math.random() * data.length);\n      let num = data[i];\n      data[i] = data[randomNum];\n      data[randomNum] = num;\n    }\n\n    setInformation(data);\n    mapy(data);\n  };\n\n  const mapy = data => {\n    let ul = data.map(toodo => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: toodo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: toodo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, toodo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this);\n    });\n    setContact(ul);\n  };\n\n  const handleOnChange = e => {\n    let value = e.target.value;\n    setSelect(value);\n\n    switch (value) {\n      case \"alphaBeit\":\n        alphaBeit();\n        break;\n\n      case \"complete\":\n        complete();\n        break;\n\n      case \"random\":\n        random();\n        break;\n\n      default:\n        serial();\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: select,\n      onChange: e => handleOnChange(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"serial\",\n        children: \"serial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"alphaBeit\",\n        children: \"alphaBeit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"complete\",\n        children: \"complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"random\",\n        children: \"random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Toodos, \"pEy1UeG1kaGbn8pQv1hqjGVzrEc=\");\n\n_c = Toodos;\nexport default Toodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toodos\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/Toodos.js"],"names":["React","useState","useEffect","Toodos","contact","setContact","select","setSelect","information","setInformation","user","JSON","parse","localStorage","getItem","fetch","id","then","response","json","data","mapy","catch","serial","sort","a","b","alphaBeit","title","complete","notChecked","checked","i","length","completed","push","random","randomNum","Math","floor","num","ul","map","toodo","handleOnChange","e","value","target"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react'\r\n\r\n\r\nfunction Toodos() {\r\n    const [contact, setContact] = useState(null);\r\n    const [select, setSelect] = useState('serial');\r\n    const [information, setInformation] = useState(null);\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/todos/?usrId=${user.id}`)\r\n            .then(response => response.json()\r\n                .then((data) => {\r\n                    mapy(data);\r\n                    setInformation(data)\r\n                }))\r\n                .catch(() =>{})\r\n\r\n    }, [user.id])\r\n\r\n\r\n    const serial = () => {\r\n\r\n        let data = information;\r\n        data.sort((a, b) => {\r\n            if (a.id < b.id)\r\n                return -1\r\n            else\r\n                return 1;\r\n        }\r\n        )\r\n        setInformation(data);\r\n        mapy(information)\r\n\r\n    }\r\n    const alphaBeit = () => {\r\n        let data = information;\r\n        data.sort((a, b) => {\r\n            if (a.title < b.title)\r\n                return -1\r\n            else\r\n                return 1;\r\n        }\r\n        );\r\n        setInformation(data);\r\n        mapy(information)\r\n    }\r\n\r\n    const complete = () => {\r\n        let notChecked = []\r\n        let checked = [];\r\n        for (let i = 0; i < information.length; ++i) {\r\n            if (information[i].completed) {\r\n                checked.push(information[i]);\r\n            } else {\r\n                notChecked.push(information[i])\r\n            }\r\n\r\n        }\r\n        let data = [...checked, ...notChecked];\r\n        setInformation(data)\r\n        mapy(data);\r\n    }\r\n\r\n    const random = () => {\r\n        let data = information;\r\n        for (let i = 0; i < data.length; ++i) {\r\n            let randomNum = Math.floor(Math.random() * data.length);\r\n            let num = data[i];\r\n            data[i] = data[randomNum];\r\n            data[randomNum] = num;\r\n        }\r\n        setInformation(data)\r\n        mapy(data);\r\n    }\r\n\r\n    const mapy = (data) => {\r\n        let ul = data.map(toodo => {\r\n            return (<p key={toodo.id}>\r\n                <input type='checkbox' checked={toodo.completed} />\r\n                <span>{toodo.title}</span>\r\n            </p>)\r\n        })\r\n        setContact(ul)\r\n    }\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        let value = e.target.value;\r\n        setSelect(value);\r\n        switch (value) {\r\n            case \"alphaBeit\":\r\n                alphaBeit();\r\n                break;\r\n            case \"complete\":\r\n                complete();\r\n                break;\r\n            case \"random\":\r\n                random();\r\n                break;\r\n            default:\r\n                serial();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <select value={select} onChange={(e) => handleOnChange(e)} >\r\n                <option value=\"serial\">serial</option>\r\n                <option value=\"alphaBeit\">alphaBeit</option>\r\n                <option value=\"complete\">complete</option>\r\n                <option value=\"random\">random</option>\r\n            </select>\r\n            <div>{contact}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Toodos;"]},"metadata":{},"sourceType":"module"}