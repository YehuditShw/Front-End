{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\PostComponent\\\\AllPost.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PlaylistAddSharpIcon from '@material-ui/icons/PlaylistAddSharp';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Posts(props) {\n  _s();\n\n  const [contact, setContact] = useState(null);\n  let {\n    url\n  } = useRouteMatch();\n  const user = JSON.parse(localStorage.getItem('user'));\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/?userId=${user.id}`).then(response => response.json().then(data => {\n      setContact(data);\n    })).catch(() => {\n      console.log(\"error\");\n    });\n  }, [user.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        \"aria-label\": \"main mailbox folders\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          ontainer: true,\n          spacing: 3,\n          children: contact && contact.map(post => {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.paper,\n                children: [post.title, /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => props.setPost(post),\n                    to: `${url}/${post.id}`,\n                    children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(PlaylistAddSharpIcon, {\n                        color: \"secondary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"pDgSXB4UfxCoalDyLpdGhAvd7Xk=\", false, function () {\n  return [useRouteMatch, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/PostComponent/AllPost.js"],"names":["React","useState","useEffect","Link","useRouteMatch","makeStyles","List","ListItem","ListItemIcon","ListItemText","PlaylistAddSharpIcon","Grid","Paper","useStyles","theme","root","width","backgroundColor","palette","background","paper","flexGrow","padding","spacing","textAlign","color","text","secondary","Posts","props","contact","setContact","url","user","JSON","parse","localStorage","getItem","classes","selectedIndex","setSelectedIndex","handleListItemClick","event","index","fetch","id","then","response","json","data","catch","console","log","map","post","title","setPost"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react'\r\nimport {\r\n    Link,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PlaylistAddSharpIcon from '@material-ui/icons/PlaylistAddSharp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        // maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n}));\r\n\r\nfunction Posts(props) {\r\n    const [contact, setContact] = useState(null);\r\n    let { url } = useRouteMatch();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const classes = useStyles();\r\n    const [selectedIndex, setSelectedIndex] = useState(1);\r\n\r\n    const handleListItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/posts/?userId=${user.id}`)\r\n            .then(response => response.json()\r\n                .then( (data) => {\r\n                    setContact(data);\r\n                }))\r\n                .catch(()=>{console.log(\"error\")})\r\n\r\n    }, [user.id])\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    <Grid ontainer spacing={3}>\r\n                    {contact && (contact.map(post => {\r\n                        return (\r\n                            <Grid item xs={12}>\r\n                                <Paper className={classes.paper}>{post.title}\r\n                            <ListItem button >\r\n                                <Link onClick={() => props.setPost(post)} to={`${url}/${post.id}`}>\r\n                                    <ListItemIcon>\r\n                                        <PlaylistAddSharpIcon color=\"secondary\"/>\r\n                                    </ListItemIcon>\r\n                                </Link>\r\n                                <ListItemText  />\r\n                            </ListItem>\r\n                            </Paper>\r\n                            </Grid>\r\n                        )\r\n                    }))}\r\n                    </Grid>\r\n                </List>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Posts;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}