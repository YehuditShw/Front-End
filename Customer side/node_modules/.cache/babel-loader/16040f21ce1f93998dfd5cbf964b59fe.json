{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\Albums.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Photo from \"./Photo\";\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Albums() {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [albums, setAlbums] = useState([]);\n  const [currentAlbum, setCurrentAlbum] = useState(null);\n  let {\n    url\n  } = useRouteMatch();\n  const classes = useStyles();\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/albums/?userId=${user.id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => {\n      data.sort((a, b) => {\n        if (a.title < b.title) return -1;else return 1;\n      });\n      setAlbums(data);\n    }).catch(() => {\n      console.log(\"error\");\n    });\n    ;\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${url}`,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          \"aria-label\": \"main mailbox folders\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: albums && albums.map(album => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  className: classes.paper,\n                  children: /*#__PURE__*/_jsxDEV(ListItem, {\n                    button: true,\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      onClick: () => {\n                        setCurrentAlbum(album);\n                      },\n                      to: `/application/albums/${album.id}`,\n                      children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(PermMediaOutlinedIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: album.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}`,\n        children: /*#__PURE__*/_jsxDEV(Photo, {\n          album: currentAlbum,\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Albums, \"SrXLA+3vV8Usv+B6R6mgXc6ysE8=\", false, function () {\n  return [useRouteMatch, useStyles];\n});\n\n_c = Albums;\nexport default Albums;\n\nvar _c;\n\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/Albums.js"],"names":["React","useState","useEffect","Photo","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","makeStyles","List","ListItem","ListItemIcon","ListItemText","PermMediaOutlinedIcon","Grid","Paper","LinearProgress","useStyles","theme","root","width","backgroundColor","palette","background","paper","flexGrow","padding","spacing","textAlign","color","text","secondary","Albums","user","JSON","parse","localStorage","getItem","albums","setAlbums","currentAlbum","setCurrentAlbum","url","classes","fetch","id","then","response","ok","json","data","sort","a","b","title","catch","console","log","map","album"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,aALF,QAMO,kBANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC,KAFtC;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GADiC;AAMvCD,EAAAA,KAAK,EAAE;AACLE,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEX,KAAK,CAACI,OAAN,CAAcQ,IAAd,CAAmBC;AAHrB;AANgC,CAAZ,CAAD,CAA5B;;AAcA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACyC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,IAAD,CAAhD;AACA,MAAI;AAAE2C,IAAAA;AAAF,MAAUnC,aAAa,EAA3B;AACA,QAAMoC,OAAO,GAAG1B,SAAS,EAAzB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd4C,IAAAA,KAAK,CAAE,uDAAsDX,IAAI,CAACY,EAAG,EAAhE,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,KALH,EAMGH,IANH,CAMQI,IAAI,IAAI;AACZA,MAAAA,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,YAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EACE,OAAO,CAAC,CAAR,CADF,KAGE,OAAO,CAAP;AACH,OALD;AAQAf,MAAAA,SAAS,CAACW,IAAD,CAAT;AAED,KAjBH,EAiBKK,KAjBL,CAiBW,MAAM;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAsB,KAjBzC;AAiB2C;AAE5C,GApBQ,EAqBL,CAACxB,IAAD,CArBK,CAAT;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAEU,OAAO,CAACxB,IAAxB;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEuB,GAAI,EAA1B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAsB,wBAAW,sBAAjC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,sBACGJ,MAAM,IAAIA,MAAM,CAACoB,GAAP,CAAWC,KAAK,IAAI;AAC7B,kCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAEhB,OAAO,CAACnB,KAA1B;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,MAAM,MAAhB;AAAA,4CACE,QAAC,IAAD;AAAM,sBAAA,OAAO,EAAE,MAAM;AAAEiB,wBAAAA,eAAe,CAACkB,KAAD,CAAf;AAAwB,uBAA/C;AAAiD,sBAAA,EAAE,EAAG,uBAAsBA,KAAK,CAACd,EAAG,EAArF;AAAA,6CACE,QAAC,YAAD;AAAA,+CACE,QAAC,qBAAD;AAAuB,0BAAA,KAAK,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADF,eAME,QAAC,YAAD;AAAc,sBAAA,OAAO,EAAEc,KAAK,CAACL;AAA7B;AAAA;AAAA;AAAA;AAAA,4BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF;AAcD,aAfU;AADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEZ,GAAI,EAApB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEF,YAAd;AAA4B,UAAA,GAAG,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA9DQV,M;UAIOzB,a,EACEU,S;;;KALTe,M;AA+DT,eAAeA,MAAf","sourcesContent":["import { React, useState, useEffect } from 'react'\r\nimport Photo from \"./Photo\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\n\r\nfunction Albums() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const [albums, setAlbums] = useState([]);\r\n  const [currentAlbum, setCurrentAlbum] = useState(null)\r\n  let { url } = useRouteMatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/albums/?userId=${user.id}`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        data.sort((a, b) => {\r\n          if (a.title < b.title)\r\n            return -1\r\n          else\r\n            return 1;\r\n        }\r\n        )\r\n\r\n        setAlbums(data);\r\n\r\n      }).catch(() => { console.log(\"error\") });;\r\n\r\n  }\r\n    , [user]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Switch>\r\n        <Route exact path={`${url}`}>\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            <Grid container spacing={3}>\r\n              {albums && albums.map(album => {\r\n                return (\r\n                  <Grid item xs={4}>\r\n                    <Paper className={classes.paper}>\r\n                      <ListItem button >\r\n                        <Link onClick={() => { setCurrentAlbum(album) }} to={`/application/albums/${album.id}`}>\r\n                          <ListItemIcon>\r\n                            <PermMediaOutlinedIcon color=\"secondary\" />\r\n                          </ListItemIcon>\r\n                        </Link>\r\n                        <ListItemText primary={album.title} />\r\n                      </ListItem>\r\n                    </Paper>\r\n                  </Grid>\r\n                )\r\n              }\r\n              )}\r\n            </Grid>\r\n          </List>\r\n        </Route>\r\n        <Route path={`${url}`} >\r\n          <Photo album={currentAlbum} url={url} />\r\n        </Route  >\r\n      </Switch>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Albums;"]},"metadata":{},"sourceType":"module"}