{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\Albums.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Photo from \"./Photo\";\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction Albums() {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem('user'));\n  const [albums, setAlbums] = useState([]);\n  const [currentAlbum, setCurrentAlbum] = useState(null);\n  let {\n    url\n  } = useRouteMatch();\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/albums/?userId=${user.id}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => {\n      data.sort((a, b) => {\n        if (a.title < b.title) return -1;else return 1;\n      });\n      setAlbums(data);\n    });\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"main mailbox folders\",\n      children: contact && contact.map(post => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setCurrentAlbum(album.id);\n            },\n            to: `/application/albums/${album.id}`,\n            children: /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(PlaylistAddSharpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: album.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${url}`,\n        children: albums\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}`,\n        children: /*#__PURE__*/_jsxDEV(Photo, {\n          album: currentAlbum,\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Albums, \"si+RnZVgDR9pqADS4Jm9LMBnT/g=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Albums;\nexport default Albums;\n\nvar _c;\n\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/Albums.js"],"names":["React","useState","useEffect","Photo","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","makeStyles","List","ListItem","ListItemIcon","ListItemText","Divider","InboxIcon","DraftsIcon","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Albums","user","JSON","parse","localStorage","getItem","albums","setAlbums","currentAlbum","setCurrentAlbum","url","fetch","id","then","response","ok","json","data","sort","a","b","title","classes","contact","map","post","album"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react'\r\nimport Photo from \"./Photo\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\nfunction Albums() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const [albums, setAlbums] = useState([]);\r\n  const [currentAlbum, setCurrentAlbum] = useState(null)\r\n  let { url } = useRouteMatch();\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/albums/?userId=${user.id}`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        data.sort((a, b) => {\r\n          if (a.title < b.title)\r\n            return -1\r\n          else\r\n            return 1;\r\n        }\r\n        );\r\n        setAlbums(data);\r\n\r\n      });\r\n\r\n  }\r\n    , [user]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        {contact && (contact.map(post => {\r\n          return (\r\n            <ListItem button >\r\n              <Link onClick={() => { setCurrentAlbum(album.id) }} to={`/application/albums/${album.id}`}>\r\n                <ListItemIcon>\r\n                  <PlaylistAddSharpIcon />\r\n                </ListItemIcon>\r\n              </Link>\r\n              <ListItemText primary={album.title}  />\r\n            </ListItem>\r\n          )\r\n        }))}\r\n      </List>\r\n      <Switch>\r\n        <Route exact path={`${url}`}>\r\n          {albums}\r\n        </Route  >\r\n        <Route path={`${url}`} >\r\n          <Photo album={currentAlbum} url={url} />\r\n        </Route  >\r\n      </Switch>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default Albums;"]},"metadata":{},"sourceType":"module"}