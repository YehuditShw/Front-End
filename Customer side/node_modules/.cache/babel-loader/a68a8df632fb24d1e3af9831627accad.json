{"ast":null,"code":"var _jsxFileName = \"X:\\\\\\u05EA\\u05E9\\u05E4\\u05D0\\\\2\\\\\\u05E9\\u05D5\\u05D5\\u05E8\\u05E6\\u05D1\\u05E8\\u05D2 \\u05D9\\u05D4\\u05D5\\u05D3\\u05D9\\u05EA\\\\sample\\\\src\\\\component\\\\AppComponent\\\\Todos.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AttachmentOutlinedIcon from '@material-ui/icons/AttachmentOutlined';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function Todos() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [select, setSelect] = useState('serial');\n  const [information, setInformation] = useState(null);\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/?userId=${user.id}`).then(response => response.json().then(data => {\n      setInformation(data);\n    })).catch(() => {\n      console.log(\"error\");\n    });\n  }, [user.id]);\n\n  const serial = () => {\n    let data = information;\n    data.sort((a, b) => a.id < b.id ? -1 : 1);\n    setInformation(data);\n    setInformation(data);\n  };\n\n  const alphaBeit = () => {\n    let data = information;\n    data.sort((a, b) => a.title < b.title ? -1 : 1);\n    setInformation(data);\n  };\n\n  const complete = () => {\n    let data = information;\n    data.sort(a => a.completed ? -1 : 1);\n    setInformation(data);\n  };\n\n  const random = () => {\n    let data = information;\n    data.sort(() => Math.random() > .5 ? 1 : -1);\n    setInformation(data);\n  };\n\n  const handleOnChange = e => {\n    let value = e.target.value;\n    setSelect(value);\n\n    switch (value) {\n      case \"alphaBeit\":\n        alphaBeit();\n        break;\n\n      case \"complete\":\n        complete();\n        break;\n\n      case \"random\":\n        random();\n        break;\n\n      default:\n        serial();\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"outlined\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: \"sort by \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"demo-controlled-open-select\",\n          open: open,\n          onClose: handleClose,\n          onOpen: handleOpen,\n          value: select,\n          onChange: e => handleOnChange(e),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"serial\",\n            children: \"serial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"alphaBeit\",\n            children: \"alphaBeit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"complete\",\n            children: \"complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"random\",\n            children: \"random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      className: classes.root,\n      children: information && information.map(value => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(AttachmentOutlinedIcon, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: value.completed,\n              name: \"checkedB\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todos, \"FGECGuyax6n0bg0z3vrLp7QH1f4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["X:/תשפא/2/שוורצברג יהודית/sample/src/component/AppComponent/Todos.js"],"names":["useState","useEffect","ListItemIcon","AttachmentOutlinedIcon","MenuItem","FormControl","Select","React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","Typography","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","formControl","margin","spacing","minWidth","Todos","classes","open","setOpen","select","setSelect","information","setInformation","user","JSON","parse","localStorage","getItem","handleClose","handleOpen","fetch","id","then","response","json","data","catch","console","log","serial","sort","a","b","alphaBeit","title","complete","completed","random","Math","handleOnChange","e","value","target","map","labelId"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport AttachmentOutlinedIcon from '@material-ui/icons/AttachmentOutlined';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function Todos() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [select, setSelect] = useState('serial');\r\n  const [information, setInformation] = useState(null);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/todos/?userId=${user.id}`)\r\n      .then(response => response.json()\r\n        .then((data) => {\r\n\r\n          setInformation(data)\r\n        }))\r\n        .catch(()=>{console.log(\"error\")})\r\n\r\n  }, [user.id])\r\n\r\n\r\n  const serial = () => {\r\n\r\n    let data = information;\r\n    data.sort((a, b) => (a.id < b.id)? -1:1);\r\n    setInformation(data);\r\n    setInformation(data);\r\n\r\n\r\n  }\r\n  const alphaBeit = () => {\r\n    let data = information;\r\n    data.sort((a, b) => (a.title < b.title)? -1:1);\r\n    setInformation(data);\r\n  }\r\n\r\n  const complete = () => {\r\n    let data= information;\r\n    data.sort((a) => (a.completed) ? -1 : 1);\r\n    setInformation(data)\r\n\r\n  }\r\n\r\n  const random = () => {\r\n    let data = information;\r\n    data.sort(() => (Math.random() > .5) ? 1 : -1);\r\n    setInformation(data)\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleOnChange = (e) => {\r\n    let value = e.target.value;\r\n    setSelect(value);\r\n    switch (value) {\r\n      case \"alphaBeit\":\r\n        alphaBeit();\r\n        break;\r\n      case \"complete\":\r\n        complete();\r\n        break;\r\n      case \"random\":\r\n        random();\r\n        break;\r\n      default:\r\n        serial();\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <FormControl className={classes.formControl}>\r\n          <Typography variant=\"outlined\" component=\"h2\" gutterBottom>sort by </Typography>\r\n          <Select\r\n            id=\"demo-controlled-open-select\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onOpen={handleOpen}\r\n            value={select} onChange={(e) => handleOnChange(e)}\r\n          >\r\n            <MenuItem value=\"serial\">serial</MenuItem>\r\n            <MenuItem value=\"alphaBeit\">alphaBeit</MenuItem>\r\n            <MenuItem value=\"complete\">complete</MenuItem>\r\n            <MenuItem value=\"random\">random</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <List dense className={classes.root}>\r\n        {information && (information.map((value) => {\r\n          const labelId = `checkbox-list-secondary-label-${value}`;\r\n          return (\r\n            <ListItem key={value} button>\r\n              <ListItemIcon>\r\n                <AttachmentOutlinedIcon color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={value.title} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  checked={value.completed}\r\n                  name=\"checkedB\"\r\n                  color=\"primary\"\r\n                />\r\n\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        }))}\r\n      </List>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}